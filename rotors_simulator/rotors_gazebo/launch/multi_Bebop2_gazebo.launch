<?xml version="1.0"?>

<launch>

  <arg name="mav_name" default="bebop2"/>
  <arg name="namespace" default="$(arg mav_name)"/>
  <arg name="model" default="$(find rotors_description)/urdf/bebop_generic_pose_sensor.gazebo"/>
  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.0"/>
  <arg name="enable_logging" default="false"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="log_file" default="$(arg mav_name)"/>
  <arg name="wait_to_record_bag" default="false"/>
  <arg name="enable_mavlink_interface" default="false"/>

  <!-- send the robot XML to param server -->
  <param name="robot_description" command="
    $(find xacro)/xacro --inorder '$(arg model)'
    enable_logging:=$(arg enable_logging)
    enable_ground_truth:=$(arg enable_ground_truth)
    enable_mavlink_interface:=$(arg enable_mavlink_interface)
    log_file:=$(arg log_file)
    wait_to_record_bag:=$(arg wait_to_record_bag)
    mav_name:=$(arg mav_name)
    namespace:=$(arg namespace)"
  />

  <!--  Gazebo parameters  -->
  <arg name="gazebo_world" default="$(find rotors_gazebo)/worlds/basic1.world"/>
  <arg name="gazebo_world" default="$(find gazebo_ros)/launch/empty_world.launch"/>
  <arg name="gui" default="true"/>
  <arg name="paused" default="false"/>
  <arg name="start_gazebo" default="true"/>
  

  <!--  Start Gazebo and load the empty world if requested to do so  -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" if="$(arg start_gazebo)">
  <arg name="world_name" value="$(arg gazebo_world)"/>
  <arg name="paused" value="$(arg paused)"/>
  <arg name="gui" value="$(arg gui)"/>
  </include>


  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_$(arg namespace)" pkg="gazebo_ros" type="spawn_model"
   args="-param robot_description
         -urdf
         -x $(arg x)
         -y $(arg y)
         -z $(arg z)
         -model $(arg namespace)"
   respawn="false" output="screen">
  </node>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  <node name="rviz" pkg="rviz" type="rviz" respawn="false"
  args="-d $(find rotors_description)/rviz/bebop2.rviz" output="screen">
  </node>






  <group ns="R_bebop2">
    <node name="fake_driver" pkg="rotors_gazebo" type="fake_driver" output="screen" >
    
      <!--<remap from="~odom" to="odometry_sensor1/odometry" />-->
      <rosparam command="load" file="$(find rotors_gazebo)/resource/logitech_f710.yaml" />
      <remap from="~joy"  to="joy" />
      <remap from="~odom" to="ground_truth/odometry" />
      <remap from="~command/trajectory" to="command/trajectory" />
      <rosparam> 
        max_vel: 3.0
        max_yawrate: 0.66
      </rosparam>
    </node>
  
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="ground_truth/odometry" />
    </node>
    <param name="tf_prefix" type="string" value="R_bebop2" />
  </group>


  <group ns="L_bebop2">
    <node name="fake_driver" pkg="rotors_gazebo" type="fake_driver" output="screen" >
    
      <!--<remap from="~odom" to="odometry_sensor1/odometry" />-->
      <rosparam command="load" file="$(find rotors_gazebo)/resource/logitech_f710.yaml" />
      <remap from="~joy"  to="joy" />
      <remap from="~odom" to="ground_truth/odometry" />
      <remap from="~command/trajectory" to="command/trajectory" />
      <rosparam> 
        max_vel: 3.0
        max_yawrate: 0.66
      </rosparam>
    </node>


    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="ground_truth/odometry" />
    </node>

    <param name="tf_prefix" type="string" value="L_bebop2" />
  </group>


</launch>
